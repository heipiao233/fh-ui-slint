/*
* Copyright 2025 heipiao233

* This file is part of "FH-UI for Slint".
* "FH-UI for Slint" is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
* "FH-UI for Slint" is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
* You should have received a copy of the GNU General Public License along with Foobar. If not, see <https://www.gnu.org/licenses/>. 
*/
import { FHPalette, FHSizeSettings, FHFontSettings } from "styling.slint";
import { SliderBase } from "builtin:/common/slider-base.slint";
import { FHInteract } from "interactive.slint";

export component Slider {
    in property <Orientation> orientation <=> base.orientation;
    in property <float> maximum <=> base.maximum;
    in property <float> minimum <=> base.minimum;
    in property <float> step <=> base.step;
    in property <bool> enabled <=> base.enabled;
    out property <bool> has-focus: base.has-focus;
    in-out property <float> value <=> base.value;

    callback changed <=> base.changed;
    callback released <=> base.released;

    vertical-stretch: base.vertical ? 1 : 0;
    horizontal-stretch: base.vertical ? 0 : 1;
    accessible-role: slider;
    accessible-enabled: root.enabled;
    accessible-value: root.value;
    accessible-value-minimum: root.minimum;
    accessible-value-maximum: root.maximum;
    accessible-value-step: min(root.step, (root.maximum - root.minimum) / 100);
    forward-focus: base;

    opacity: enabled ? 1 : 0.5;

    min-width: base.vertical ? thumb.width : 0px;
    min-height: base.vertical ? 0px : thumb.height;
    rail := Rectangle {
        width: base.vertical ? 8px : parent.width;
        height: base.vertical ? parent.height : 8px;
        background: transparent;
        border-width: 1px;
        border-color: FHPalette.general.dark;
    }

    thumb := FHInteract {
        x: base.vertical ? (parent.width - self.width) / 2 : clamp((parent.width - self.width) * (root.value - root.minimum) / (root.maximum - root.minimum), 0, root.width - self.width);
        y: base.vertical ? clamp((parent.height - self.height) * (root.value - root.minimum) / (root.maximum - root.minimum), 0, root.height - self.height) : (parent.height - self.height) / 2;
        width: (base.vertical ? FHSizeSettings.component-height : 16px);
        height: (!base.vertical ? FHSizeSettings.component-height : 16px);
        enabled: root.enabled;
        hovered: base.has-focus || base.has-hover;
    }

    base := SliderBase {
        width: 100%;
        height: 100%;
        handle-x: thumb.x;
        handle-y: thumb.y;
        handle-width: thumb.width;
        handle-height: thumb.height;
    }
}

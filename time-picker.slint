/*
* Copyright 2025 heipiao233

* This file is part of "FH-UI for Slint".
* "FH-UI for Slint" is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
* "FH-UI for Slint" is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
* You should have received a copy of the GNU General Public License along with Foobar. If not, see <https://www.gnu.org/licenses/>. 
*/
import { Time, TimePickerBase } from "builtin:/common/time-picker-base.slint";
import { VerticalBox } from "builtin:/common/layout.slint";
import { Button, StandardButton } from "./button.slint";
import { FHPalette, FHFontSettings, Icons } from "styling.slint";
import { FHInteract } from "interactive.slint";

export { Time }

export component TimePickerPopup inherits PopupWindow {
    in property <bool> use-24-hour-format <=> base.use-24-hour-format;
    in property <string> title: "Select time";
    in property <Time> time <=> base.time;

    callback canceled();
    callback accepted(/* current-time */ Time);

    close-policy: PopupClosePolicy.no-auto-close;

    background-layer := Rectangle {
        width: dialog.width;
        height: dialog.height;
        FHInteract {
            width: dialog.width;
            height: dialog.height;
            has-background: false;
        }
        background: FHPalette.background;
    }

    dialog := Dialog {
        padding: 8px;

        base := TimePickerBase {
            title: root.title;
            style: {
                foreground: FHPalette.foreground,
                vertical-spacing: 8px,
                horizontal-spacing: 4px,
                clock-style: {
                    background: FHPalette.background,
                    foreground: FHPalette.general.dark,
                    time-selector-style: {
                        foreground: FHPalette.foreground,
                        foreground-selected: FHPalette.selection-foreground,
                        font-size: FHFontSettings.body-strong.font-size,
                        font-weight: FHFontSettings.body-strong.font-weight
                    }
                },
                input-style: {
                    background: FHPalette.alternate-background,
                    background-selected: FHPalette.selection-background,
                    foreground: FHPalette.foreground,
                    foreground-selected: FHPalette.selection-foreground,
                    // border-radius: 8px,
                    font-size: 57 * 0.0625rem,
                    font-weight: 400
                },
                period-selector-style: {
                    border-radius: 8px,
                    border-width: 1px,
                    border-brush: FHPalette.border,
                    item-style: {
                        font-size: FHFontSettings.body-strong.font-size,
                        font-weight: FHFontSettings.body-strong.font-weight,
                        foreground: FHPalette.foreground,
                        background-selected: FHPalette.general.dark,
                        foreground-selected: FHPalette.foreground
                    }
                },
                title-style: {
                    font-size: FHFontSettings.body.font-size,
                    font-weight: FHFontSettings.body.font-weight,
                    foreground: FHPalette.foreground,
                },
            };
        }

        Button {
            icon: base.selection-mode ? Icons.keyboard : Icons.clock;
            colorize-icon: true;
            accessible-label: "Toggle input picker";
            dialog-button-role: action;

            clicked => {
                base.selection-mode = !base.selection-mode;
            }
        }

        StandardButton {
            kind: cancel;

            clicked => {
                root.close();
                root.canceled();
            }
        }

        StandardButton {
            enabled: base.ok-enabled();
            kind: ok;

            clicked => {
                root.close();
                root.accepted(base.get-current-time());
            }
        }
    }
}

/*
* Copyright 2025 heipiao233

* This file is part of "FH-UI for Slint".
* "FH-UI for Slint" is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
* "FH-UI for Slint" is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
* You should have received a copy of the GNU General Public License along with Foobar. If not, see <https://www.gnu.org/licenses/>. 
*/
import { FHFontSettings, FHPalette } from "styling.slint";
import { ScrollView } from "scrollview.slint";
import { TextEditBase } from "builtin:/common/textedit-base.slint";

export component TextEdit {
    in property <TextWrap> wrap <=> base.wrap;
    in property <TextHorizontalAlignment> horizontal-alignment <=> base.horizontal-alignment;
    in property <bool> read-only <=> base.read-only;
    in property <length> font-size <=> base.font-size;
    in property <bool> enabled <=> base.enabled;
    in property <string> placeholder-text <=> base.placeholder-text;
    in-out property <bool> has-focus: base.has-focus;
    out property <length> visible-width <=> base.visible-width;
    out property <length> visible-height <=> base.visible-height;
    in-out property <string> text <=> base.text;
    in-out property <length> viewport-x <=> base.viewport-x;
    in-out property <length> viewport-y <=> base.viewport-y;
    in-out property <length> viewport-width <=> base.viewport-width;
    in-out property <length> viewport-height <=> base.viewport-height;

    callback edited <=> base.edited;
    callback key-pressed <=> base.key-pressed;
    callback key-released <=> base.key-released;

    accessible-role: AccessibleRole.text-input;
    accessible-enabled: root.enabled;
    accessible-value <=> text;
    accessible-placeholder-text: text == "" ? placeholder-text : "";

    public function set-selection-offsets(start: int, end: int) {
        base.set-selection-offsets(start, end);
    }

    public function select-all() {
        base.select-all();
    }

    public function clear-selection() {
        base.clear-selection();
    }

    public function cut() {
        base.cut();
    }

    public function copy() {
        base.copy();
    }

    public function paste() {
        base.paste();
    }

    forward-focus: base;
    horizontal-stretch: 1;
    vertical-stretch: 1;

    states [
        disabled when !root.enabled: {
            root.opacity: 0.35;
        }
    ]

    base := TextEditBase {
        width: 100%;
        height: 100%;
        background: FHPalette.alternate-background;
        scroll-view-padding: 12px;
        foreground: FHPalette.foreground;
        font-size: FHFontSettings.body.font-size;
        font-weight: FHFontSettings.body.font-weight;
        selection-background-color: FHPalette.selection-background;
        selection-foreground-color: FHPalette.selection-foreground;
        placeholder-color: FHPalette.placeholder-foreground;
        Rectangle {
            width: parent.width;
            height: 1px;
            y: parent.height - 1px;
            border-color: root.has-focus && root.enabled ? FHPalette.general.dark: FHPalette.border;
            border-width: 1px;
        }
    }
}

// Copyright Â© SixtyFPS GmbH <info@slint.dev>
// SPDX-License-Identifier: GPL-3.0-only OR LicenseRef-Slint-Royalty-free-2.0 OR LicenseRef-Slint-Software-3.0

import { LineEditBase } from "builtin:/common/lineedit-base.slint";
import { FHPalette, FHFontSettings, DefaultPalette, FHSizeSettings } from "styling.slint";

export component LineEdit {
    in property <bool> enabled <=> base.enabled;
    in property <InputType> input-type <=> base.input-type;
    in property <TextHorizontalAlignment> horizontal-alignment <=> base.horizontal-alignment;
    in property <bool> read-only <=> base.read-only;
    in property <length> font-size <=> base.font-size;
    in property <string> placeholder-text <=> base.placeholder-text;
    out property <bool> has-focus <=> base.has-focus;
    in-out property <string> text <=> base.text;

    callback accepted <=> base.accepted;
    callback edited <=> base.edited;
    callback key-pressed <=> base.key-pressed;
    callback key-released <=> base.key-released;
    accessible-role: text-input;
    accessible-enabled: root.enabled;
    accessible-value <=> text;
    accessible-placeholder-text: text == "" ? placeholder-text : "";
    accessible-action-set-value(v) => {
        text = v;
        edited(v);
    }

    opacity: enabled ? 1 : 0.5;

    public function set-selection-offsets(start: int, end: int) {
        base.set-selection-offsets(start, end);
    }

    public function select-all() {
        base.select-all();
    }

    public function clear-selection() {
        base.clear-selection();
    }

    public function cut() {
        base.cut();
    }

    public function copy() {
        base.copy();
    }

    public function paste() {
        base.paste();
    }

    states [
        focused when base.has-focus: {
            underline.background: DefaultPalette.general;
        }

        unfocused when !base.has-focus: {
            underline.background: FHPalette.border;
        }
    ]

    Rectangle {
        background: FHPalette.alternate-background;
        layout := HorizontalLayout {
            padding-left: 8px;
            padding-right: 8px;
            base := LineEditBase {
                font-size: FHFontSettings.body.font-size;
                font-weight: FHFontSettings.body.font-weight;
                selection-background-color: FHPalette.selection-background;
                selection-foreground-color: FHPalette.selection-foreground;
                text-color: FHPalette.foreground;
                placeholder-color: FHPalette.placeholder-foreground;
                margin: layout.padding-left + layout.padding-right;
                min-height: FHSizeSettings.component-height;
            }
        }
    }

    underline := Rectangle {
        y: root.height - 1px;
        width: root.width;
        height: 1px;
    }
}
